(load "util")

(defvar then (now))
(defvar dict (hash-from-pairs '((foo 1) (bar 2))))
(defvar r1 (new (rect 6)))

(compile-only
 (format t "Reading words...\n")
 (format t "Words: ~s\n" (read-words "> "))
 (format t "The answer: ~a\n" (the-answer))
 (call (make-greeter "World"))
 (format t "Hostname: ~a\n" (hostname))
 (format t "ARGV: ~s\n" (argv))
 (format t "Error: ~s\n" (fail-gracefully))
 (format t "Sum: ~a\n" (splat '+ '(1 2 3 4)))
 (format t "Tokens: ~s\n" (tokenize "1 * (2 * 3) + 4"))
 (format t "Keys: ~s\n" (keys dict))
 (format t "Rect r1 size: ~a\n" r1.size)
 (format t "Doubling rect size...\n")
 (upd r1.size (* 2))
 (format t "Rect r1 size: ~a\n" r1.size)
 (format t "Elapsed time: ~,2fms\n" (- (now) then)))
